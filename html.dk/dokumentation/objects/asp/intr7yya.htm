<html><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<title>AddHeader</title>
<script language="JavaScript">

    szNavVersion = navigator.appVersion

    if (navigator.appName == "Microsoft Internet Explorer") {
	if (szNavVersion.indexOf ("4.") >= 0) {
	    document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/spidie4.css">');
	} else {
	    document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/spidie3.css">');
	}
    }
    else if (navigator.appName == "Netscape") {
	document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/spidie4.css">');
    }
    else {
	document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/spidie3.css">');
    }

</script>
<META NAME="DESCRIPTION" CONTENT="Internet Information Server reference information"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<font face="Verdana, Arial, Helvetica">
<h2><a name="_addheader"></a>AddHeader</h2>
<p>
The <b>AddHeader </b>method adds an HTML header with a specified value. This method always adds a new HTTP header to the response. It will not replace an existing header of the same name. Once a header has been added, it cannot be removed.</p>
<p>
This method is for advanced use only. If another <b>Response </b>method will provide the functionality you require, it is recommended that you use that method instead.</p>
<h4>Syntax</h4>
<pre><b>Response.AddHeader</b> <i>name</i><b>,</b> <i>value
 </i></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>name</i></dt>
<dd>
The name of the new header variable.<br>
</dd>
<dt>
<i>value</i></dt>
<dd>
The initial value stored in the new header variable.</dd>
</dl>
<h4>Remarks</h4>
<p>
To avoid name ambiguity, <i>name</i> should not contain any underscore (_) characters. The <b>ServerVariables</b> collection interprets underscores as dashes in the header name. For example, the following script causes the server to search for a header named MY-HEADER.</p>
<code>&lt;% Request.ServerVariables(&quot;HTTP_MY_HEADER&quot;) %&gt;</code>
<p>
Because HTTP protocol requires that all headers be sent before content, you must call <b>AddHeader </b>in your script before any output (such as that generated by HTML code or the <a href="intr2w2t.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr2w2t.htm"><b>Write</b></a> method) is sent to the client. The exception to this rule is when the <a href="intr1fsi.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr1fsi.htm"><b>Buffer</b></a> property is set to TRUE. If the output is buffered, you can call the <b>AddHeader </b>method at any point in the script, as long as it precedes any calls to <a href="intr74tk.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr74tk.htm"><b>Flush</b></a>. Otherwise, the call to <b>AddHeader </b>will generate a run-time error.</p>
<p>
The following two .asp files illustrate this point.</p>
<pre>-------file1.asp---------
&lt;% Response.AddHeader &quot;WARNING&quot;, &quot;Error Message Text&quot; %&gt; 
&lt;HTML&gt;
Some text on the Web page.
&lt;/HTML&gt;
 </pre>
<p>
In the preceding example, the page is not buffered. The script works, however, because the <b>AddHeader </b>method is called before the server sends the output</p>
<pre>Some text on the Web page
 </pre>
<p>
to the client. If the order were reversed, the call to the <b>AddHeader </b>method would generate a run-time error.</p>
<pre>------file2.asp----------
&lt;% Response.Buffer = TRUE %&gt; 
&lt;HTML&gt;
Here's some text on your Web page.
&lt;% Response.AddHeader &quot;WARNING&quot;, &quot;Error Message Text&quot; %&gt; Here's some more interesting and illuminating text.
&lt;% Response.Flush %&gt; 
&lt;%= Response.Write(&quot;some string&quot;) %&gt; 
&lt;/HTML&gt;
 </pre>
<p>
In the preceding example, the page is buffered, and as a result, the server will not send output to the client until all the ASP scripts on the page have been processed or until the <a href="intr74tk.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr74tk.htm"><b>Flush</b></a> method is called. With buffered output, calls to <b>AddHeader </b>can appear anywhere the script, so long as they precede any calls to <b>Flush</b>. If the call to <b>AddHeader</b> appeared below the call to <b>Flush </b>in the preceding example, the script would generate a run-time error. </p>
<p>
You can use this method to send multiple copies of the same header with different values, as with WWW-Authenticate headers. </p>
<h4>Example</h4>
<p>
The following example uses the <b>AddHeader </b>method to request that the client use BASIC authentication.</p>
<pre>&lt;% Response.Addheader &quot;WWW-Authenticate&quot;, &quot;BASIC&quot; %&gt;
 </pre>
<p>
<b>Note</b>  The preceding script merely informs the client browser which authentication to use. If you use this script in your Web applications, you should ensure that the Web server has BASIC authentication enabled.</p>
<h4>Applies To</h4>
<p>
<a href="intr5sj8.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr5sj8.htm"><b>Response Object</b></a> </p>
<h4>See Also</h4>
<p>
<a href="intr74tk.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr74tk.htm"><b>Flush</b></a>, <a href="intr2w2t.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr2w2t.htm"><b>Write</b></a>, <a href="intr1fsi.htm" tppabs="http://www.activeserverpages.dk/iishelp/iis/htm/asp/intr1fsi.htm"><b>Buffer</b></a> </p>
<hr class="iis" size="1">
<p align="center"><em><a href="javascript:if(confirm('http://www.activeserverpages.dk/iishelp/common/colegal.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.activeserverpages.dk/iishelp/common/colegal.htm'" tppabs="http://www.activeserverpages.dk/iishelp/common/colegal.htm">&copy; 1997 by Microsoft Corporation. All rights reserved.</a></em></p>
</BODY>
</HTML>
