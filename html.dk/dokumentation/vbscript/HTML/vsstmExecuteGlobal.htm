<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExecuteGlobal Statement</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>Visual&nbsp;Basic&nbsp;Scripting&nbsp;Edition</TD>
<TD class="bannerright" nowrap><a href="../html-vss/vbsTOC.htm">Language Reference</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="vsstmexecuteglobal"></A>ExecuteGlobal Statement</H1>

<P>Executes one or more specified statements in the global namespace of a script.</P>

<P><CODE>ExecuteGlobal <I>statement</I> </CODE></P>

<P>The required <I>statement</I> argument is a <A HREF="vtglossary.htm#defstringexpressionvbs">string expression</A> containing one or more statements for execution.&nbsp; Include multiple statements in the <I>statement</I> argument, using colons or embedded line breaks to separate them. </P>

<H4>Remarks</H4>

<P>In VBScript, <I>x = y</I> can be interpreted two ways. The first is as an assignment statement, where the value of <I>y</I> is assigned to <I>x</I>. The second interpretation is as an <A HREF="vtglossary.htm#defexpressionvbs">expression</A> that tests if <I>x</I> and <I>y</I> have the same value. If they do, <I>result</I> is <B>True</B>; if they are not, <I>result</I> is <B>False</B>. The <B>ExecuteGlobal</B> statement always uses the first interpretation, whereas the <B>Eval</B> method always uses the second. </P>

<P class=indent><B>Note</B>&nbsp;&nbsp;In Microsoft® JScript™, no confusion exists between assignment and comparison, because the assignment operator (=) is different from the <A HREF="vtglossary.htm#defcomparisonoperatorvbs">comparison operator</A>. </P>

<P>All statements used with <B>ExecuteGlobal</B> are executed in the script's global namespace. This allows code to be added to the program so that any <A HREF="vtglossary.htm#defprocedurevbs">procedure</A> can access it. For example, a VBScript <B>Class</B> statement can be executed at run time and functions can subsequently create new instances of the class. </P>

<P>Adding procedures and classes at runtime can be useful, but also introduces the possibility of overwriting existing global <A HREF="vtglossary.htm#defvariablevbs">variable</A> and functions at runtime. Because this can cause significant programming problems, care should be exercised when using the <B>ExecuteGlobal</B> statement. If you don’t need access to a variable or function outside of a procedure, use the <B>Execute</B> statement which will only affect the namespace of the calling function. </P>

<P>The following example illustrates the use of the <B>ExecuteGlobal</B> statement: </P>

<PRE><CODE>Dim X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Declare X in global scope.
X = "Global"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Assign global X a value.
Sub Proc1&nbsp;&nbsp;&nbsp;' Declare procedure.
  Dim X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Declare X in local scope.
  X = "Local"&nbsp;&nbsp;&nbsp;' Assign local X a value.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' The Execute statement here creates a
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' procedure that, when invoked, prints X.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' It print the global X because Proc2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' inherits everything in global scope.
  ExecuteGlobal "Sub Proc2: Print X: End Sub"
  Print Eval("X")&nbsp;&nbsp;&nbsp;' Print local X.
  Proc2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Invoke Proc2 in Global scope resulting
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' in "Global" being printed.
End Sub
Proc2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' This line causes an error since 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Proc2 is unavailable outside Proc1.
Proc1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Invoke Proc1.
  Execute "Sub Proc2: Print X: End Sub"
Proc2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' This invocation succeeds because Proc2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' is now available globally.</CODE></PRE>

<P>The following example shows how the <B>ExecuteGlobal</B> statement can be rewritten so you don't have to enclose the entire procedure in the quotation marks: </P>

<PRE><CODE>S = "Sub Proc2" &amp; vbCrLf
S = S &amp; "  Print X" &amp; vbCrLf 
S = S &amp; "End Sub"
ExecuteGlobal S</CODE></PRE>

<H4>Requirements</H4>

<P><A HREF="vtoriversioninformation.htm">Version 1</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="vbscopy.htm">&copy;2000 Microsoft Corporation. All rights reserved.</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
