<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Function Statement</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>Visual&nbsp;Basic&nbsp;Scripting&nbsp;Edition</TD>
<TD class="bannerright" nowrap><a href="../html-vss/vbsTOC.htm">Language Reference</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="vsstmfunction"></A>Function Statement</H1>

<P>Declares the name, arguments, and code that form the body of a <B>Function</B> procedure.</P>

<P><CODE>[<B>Public</B> [<B>Default</B>] | <B>Private</B>] <B>Function</B> <I>name</I> [<B>(</B><I>arglist</I><B>)</B>]<BR>
&nbsp;&nbsp;&nbsp;[<I>statements</I>]<BR>
&nbsp;&nbsp;&nbsp;[<I>name</I> <B>=</B> <I>expression</I>]<BR>
&nbsp;&nbsp;&nbsp;[<B>Exit Function</B>] <BR>
&nbsp;&nbsp;&nbsp;[<I>statements</I>]<BR>
&nbsp;&nbsp;&nbsp;[<I>name</I> <B>=</B> <I>expression</I>]<BR>
<B>End Function</B> </CODE></P>

<H4>Arguments</H4>

<P class=dt><I>Public</I></P>

<P class=indent>Indicates that the <B>Function</B> procedure is accessible to all other procedures in all scripts.</P>

<P class=dt><I>Default</I></P>

<P class=indent>Used only with the <B>Public</B> keyword in a <B>Class</B> block to indicate that the <B>Function</B> procedure is the default method for the <A HREF="vtglossary.htm#defclassvbs">class</A>. An error occurs if more than one <B>Default</B> procedure is specified in a class.</P>

<P class=dt><I>Private</I></P>

<P class=indent>Indicates that the <B>Function</B> procedure is accessible only to other procedures in the script where it is declared or if the function is a member of a class, and that the <B>Function</B> procedure is accessible only to other procedures in that class.</P>

<P class=dt><I>name</I></P>

<P class=indent>Name of the <B>Function</B>; follows standard <A HREF="vtglossary.htm#defvariablevbs">variable</A> naming conventions.</P>

<P class=dt><I>arglist</I></P>

<P class=indent>List of variables representing arguments that are passed to the <B>Function</B> procedure when it is called. Multiple variables are separated by commas. </P>

<P class=dt><I>statements</I></P>

<P class=indent>Any group of statements to be executed within the body of the <B>Function</B> procedure.</P>

<P class=dt><I>expression</I></P>

<P class=indent>Return value of the <B>Function</B>.</P>

<P>The <I>arglist</I> argument has the following syntax and parts:</P>

<P>[<B>ByVal </B>| <B>ByRef</B>] <I>varname</I>[<B>( )</B>]</P>

<H4>Arguments</H4>

<P class=dt><I>ByVal</I></P>

<P class=indent>Indicates that the <A HREF="vtglossary.htm#defargumentvbs">argument</A> is passed <A HREF="vtglossary.htm#defbyvaluevbs">by value</A>.</P>

<P class=dt><I>ByRef</I></P>

<P class=indent>Indicates that the argument is passed <A HREF="vtglossary.htm#defbyreferencevbs">by reference</A>.</P>

<P class=dt><I>varname</I></P>

<P class=indent>Name of the variable representing the argument; follows standard variable naming conventions.</P>

<H4>Remarks</H4>

<P>If not explicitly specified using either <A HREF="vtglossary.htm#defpublicvbs">Public</A> or <A HREF="vtglossary.htm#defprivatevbs">Private</A>, <B>Function</B> procedures are public by default, that is, they are visible to all other procedures in your script. The value of local variables in a <B>Function</B> is not preserved between calls to the <A HREF="vtglossary.htm#defprocedurevbs">procedure</A>.</P>

<P>You cannot define a <B>Function</B> procedure inside any other procedure (e.g. <B>Sub</B> or <B>Property Get</B>).</P>

<P>The <B>Exit Function </B>statement causes an immediate exit from a <B>Function</B> procedure. Program execution continues with the statement that follows the statement that called the <B>Function</B> procedure. Any number of <B>Exit Function</B> statements can appear anywhere in a <B>Function</B> procedure.</P>

<P>Like a <B>Sub</B> procedure, a <B>Function</B> procedure is a separate procedure that can take arguments, perform a series of statements, and change the values of its arguments. However, unlike a <B>Sub</B> procedure, you can use a <B>Function</B> procedure on the right side of an <A HREF="vtglossary.htm#defexpressionvbs">expression</A> in the same way you use any intrinsic function, such as <B>Sqr</B>, <B>Cos</B>, or <B>Chr</B>, when you want to use the value returned by the function.</P>

<P>You call a <B>Function</B> procedure using the function name, followed by the argument list in parentheses, in an expression. See the <B>Call</B> statement for specific information on how to call <B>Function</B> procedures.</P>

<P class=indent><B>Caution&nbsp;&nbsp;&nbsp;Function</B> procedures can be recursive, that is, they can call themselves to perform a given task. However, recursion can lead to stack overflow. </P>

<P>To return a value from a function, assign the value to the function name. Any number of such assignments can appear anywhere within the procedure. If no value is assigned to <I>name</I>, the procedure returns a default value: a numeric function returns 0 and a string function returns a zero-length string (""). A function that returns an object reference returns <A HREF="vtglossary.htm#defnothingvbs">Nothing</A> if no object reference is assigned to <I>name</I> (using <B>Set</B>) within the <B>Function</B>.</P>

<P>The following example shows how to assign a return value to a function named BinarySearch. In this case, <B>False</B> is assigned to the name to indicate that some value was not found. </P>

<PRE><CODE><span class=cfe><B>Function</B></span> BinarySearch(. . .)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. . .
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Value not found. Return a value of False.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If lower &gt; upper Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BinarySearch = False&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit Function 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. . .
End Function</CODE></PRE>

<P>Variables used in <B>Function</B> procedures fall into two categories: those that are explicitly declared within the procedure and those that are not. Variables that are explicitly declared in a procedure (using <B>Dim</B> or the equivalent) are always local to the procedure. Variables that are used but not explicitly declared in a procedure are also local unless they are explicitly declared at some higher level outside the procedure.</P>

<P class=indent><B><B>Caution&nbsp;&nbsp;&nbsp;</B></B>A procedure can use a variable that is not explicitly declared in the procedure, but a naming conflict can occur if anything you have defined at the <A HREF="vtglossary.htm#defscriptlevelvbs">script level</A> has the same name. If your procedure refers to an undeclared variable that has the same name as another procedure, <A HREF="vtglossary.htm#defconstantvbs">constant</A>, or variable, it is assumed that your procedure is referring to that script-level name. To avoid this kind of conflict, use an <B>Option Explicit</B> statement to force explicit declaration of variables.</P>

<P class=indent><B><B>Caution&nbsp;&nbsp;&nbsp;</B></B>VBScript may rearrange arithmetic expressions to increase internal efficiency. Avoid using a <B>Function</B> procedure in an arithmetic expression when the function changes the value of variables in the same expression.</P>

<H4>Requirements</H4>

<P><A HREF="vtoriversioninformation.htm">Version 1</A> </P>

<H4>See Also</H4>

<P><A HREF="vsstmcall.htm">Call Statement</A> | <A HREF="vsstmdim.htm">Dim Statement</A> | <A HREF="vsstmexit.htm">Exit Statement</A> | <A HREF="vskeynothing.htm">Nothing</A> | <A HREF="vsstmset.htm">Set Statement</A> | <A HREF="vsstmsub.htm">Sub Statement</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="vbscopy.htm">&copy;2000 Microsoft Corporation. All rights reserved.</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
